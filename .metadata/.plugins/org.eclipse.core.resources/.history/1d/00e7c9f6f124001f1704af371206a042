import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

import org.graalvm.compiler.lir.amd64.AMD64Binary.TwoOp;

public class Practice {
	public static void main(String[] args) {

		/*
		 * Scanner sc = new Scanner(System.in); // String str; char ch[] =
		 * sc.nextLine().toCharArray(); // created empty array & store array element
		 * statically & convert it into to // character array System.out.println(ch);
		 * for (int i = ch.length - 1; i >= 0; i--) { System.out.print(ch[i]); }
		 */
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter Array Element");
		int length = sc.nextInt(), num[] = new int[length], target = sc.nextInt();
		System.out.println(num);
		for (int i = 0; i < num.length; i++) {

			num[i] = sc.nextInt();
			System.out.print(num[i]);

		}
		int result[] = twoSum(num, target);
		System.out.println("Two Sum =" + result[0] + ',' + result[1]);

	}

	private static int[] twoSum(int[] num, int target) {
		Map<Integer, Integer>map=new HashMap<>();
		for(int i=0;i<=num,length;i++) {
			int complement=target-num[i];
			if(map.containsKey(complement)) {
				return new int [] {i,map.get(complement)};
				
			}
			map.put(num[i],i);
		}
		return new int[0];
	}

}
